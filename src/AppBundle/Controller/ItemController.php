<?php

namespace AppBundle\Controller;

use AppBundle\Entity\Item;
use AppBundle\Form\ItemType;
use AppBundle\Service\FileUploader;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

class ItemController extends Controller
{
    public function showAction()
    {
        return $this->render('item/show.html.twig', []);
    }

    public function listAction(){
        $repository = $this->getDoctrine()->getRepository(Item::class);
        $items = $repository->findAll();
        return $this->render('item/list.html.twig', ['items' => $items]);
    }

    public function editAction(Request $request, $id)
    {
        $rep = $this->getDoctrine()->getRepository(Item::class);
        $em = $this->getDoctrine()->getManager();
        $response = new Response();
        $item = $rep->findOneBy(['id' => $id]);
        $form = $this->createForm(ItemType::class, $item);
        $form->get('title')->setData($item->getTitle());
        $form->get('description')->setData($item->getDescription());
        $form->get('price')->setData($item->getPrice());
        $form->get('isActive')->setData($item->getIsActive());
        $form->get('category')->setData($item->getCategory());
        $form->get('save')->setData(['label' => 'Save Item']);
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $em->persist($item); // tells Doctrine you want to (eventually) save the Category (no queries yet)
            $em->flush(); // actually executes the queries (i.e. the INSERT query)
            $response->setContent('Saved item with id ' . $item->getId());
        }
        return $this->render('item/edit.html.twig', [
            'form' => $form->createView(),
            'response' => $response->getContent(),
        ]);
    }
    public function createAction(Request $request, FileUploader $fileUploader){
        $rep = $this->getDoctrine()->getRepository(Item::class);
        $em = $this->getDoctrine()->getManager();
        $items = $rep->findAll();
        $item = new Item();
        $response = new Response();
        $form = $this->createForm(ItemType::class, $item);
        //var_dump($form->getData()); die();
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $file = $item->getImages();
            $fileName = $fileUploader->upload($file);
            $item->setImages($fileName);
            //var_dump($request->files); die();
            $em->persist($item); // tells Doctrine you want to (eventually) save the Category (no queries yet)
            $em->flush(); // actually executes the queries (i.e. the INSERT query)
            $response->setContent('Saved new item with id ' . $item->getId());
        }

        return $this->render('item/create.html.twig', [
            'form' => $form->createView(),
            'response' => $response->getContent(),
            'items' => $items,
            ]);
    }

    public function removeAction($id)
    {
        $response = new Response();
        $em = $this->getDoctrine()->getManager();
        $item = $em->getRepository(Item::class)->find($id);

        if (!$item) {
            throw $this->createNotFoundException(
                'No item found for id '.$id
            );
        }

        $em->remove($item);
        $em->flush();
        $response->setContent('Item with id ' . $id . ' was removed.');
        return $this->render('item/remove.html.twig', [
            'response' => $response->getContent()
        ]);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

}